# author Philippe Verney from F2I-CONSULTING

cmake_minimum_required(VERSION 2.6)

project(minizip)

find_package(ZLIB)

set(CMAKE_POSITION_INDEPENDENT_CODE TRUE)

add_library(${PROJECT_NAME} STATIC "")

target_sources(${PROJECT_NAME} 
	PRIVATE 
		"${CMAKE_CURRENT_LIST_DIR}/crypt.h"
		"${CMAKE_CURRENT_LIST_DIR}/ioapi.c"
		"${CMAKE_CURRENT_LIST_DIR}/ioapi.h"
		"${CMAKE_CURRENT_LIST_DIR}/unzip.h"
		"${CMAKE_CURRENT_LIST_DIR}/unzip.c"
		"${CMAKE_CURRENT_LIST_DIR}/zip.h"
		"${CMAKE_CURRENT_LIST_DIR}/zip.c"

)

if(WIN32)
	target_sources(${PROJECT_NAME} 
		PRIVATE
			"${CMAKE_CURRENT_LIST_DIR}/iowin32.h"
			"${CMAKE_CURRENT_LIST_DIR}/iowin32.c"
	)
endif()

target_link_libraries(${PROJECT_NAME} PRIVATE ZLIB::ZLIB)

target_include_directories(${PROJECT_NAME} PUBLIC
	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
	$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
)

include(GNUInstallDirs)

install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/
	DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
	COMPONENT minizip_headers
	FILES_MATCHING PATTERN "*.h"
	PATTERN ".git" EXCLUDE
	REGEX "iowin32.h" EXCLUDE
)

if(WIN32)
	install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/iowin32.h
		DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
		COMPONENT minizip_headers
	)
endif()

install(TARGETS ${PROJECT_NAME}
	EXPORT ${PROJECT_NAME}Targets
	RUNTIME
		DESTINATION ${CMAKE_INSTALL_BINDIR}
		COMPONENT ${PROJECT_NAME}_applications
	LIBRARY
		DESTINATION ${CMAKE_INSTALL_LIBDIR}
		COMPONENT ${PROJECT_NAME}_libraries
	ARCHIVE
		DESTINATION ${CMAKE_INSTALL_LIBDIR}
		COMPONENT ${PROJECT_NAME}_libraries
)
